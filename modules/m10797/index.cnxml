<document xmlns="http://cnx.rice.edu/cnxml" xmlns:m="http://www.w3.org/1998/Math/MathML">
  <title>Discrete Time Processing of Continuous Time Signals</title>
<metadata xmlns:md="http://cnx.rice.edu/mdml">
  <md:content-id>m10797</md:content-id>
  <md:title>Discrete Time Processing of Continuous Time Signals</md:title>
  <md:abstract>This module discusses the theory and practical considerations behind the use of discrete time tools to process of continuous time signals.</md:abstract>
  <md:uuid>2161d9ea-1c46-4858-9ad8-e016ad5334c1</md:uuid>
</metadata>

<content>
    <section id="cid1" class="in">
      <title>Introduction</title>
      <para id="id62168">Digital computers can process discrete time signals using extremely flexible and powerful algorithms. However, most signals of interest are continuous time signals, which is how data almost always appears in nature. Now that the theory supporting methods for generating a discrete time signal from a continuous time signal through sampling and then perfectly reconstructing the original signal from its samples without error has been discussed, it will be shown how this can be applied to implement continuous time, linear time invariant systems using discrete time, linear time invariant systems. This is of key importance to many modern technologies as it allows the power of digital computing to be leveraged for processing of analog signals.</para>
    </section>
    <section id="cid2" class="th">
      <title>Discrete Time Processing of Continuous Time Signals</title>
      <section id="uid1">
        <title>Process Structure</title>
        <para id="id62196">With the aim of processing continuous time signals using a discrete time system, we will now examine one of the most common structures of digital signal processing technologies. As an overview of the approach taken, the original continuous time signal <m:math overflow="scroll"><m:mi>x</m:mi></m:math> is sampled to a discrete time signal <m:math overflow="scroll"><m:msub><m:mi>x</m:mi><m:mi>s</m:mi></m:msub></m:math> in such a way that the periods of the samples spectrum <m:math overflow="scroll"><m:msub><m:mi>X</m:mi><m:mi>s</m:mi></m:msub></m:math> is as close as possible in shape to the spectrum of <m:math overflow="scroll"><m:mi>X</m:mi></m:math>. Then a discrete time, linear time invariant filter <m:math overflow="scroll"><m:msub><m:mi>H</m:mi><m:mn>2</m:mn></m:msub></m:math> is applied, which modifies the shape of the samples spectrum <m:math overflow="scroll"><m:msub><m:mi>X</m:mi><m:mi>s</m:mi></m:msub></m:math> but cannot increase the bandlimit of <m:math overflow="scroll"><m:msub><m:mi>X</m:mi><m:mi>s</m:mi></m:msub></m:math>, to produce another signal <m:math overflow="scroll"><m:msub><m:mi>y</m:mi><m:mi>s</m:mi></m:msub></m:math>. This is reconstructed with a suitable reconstruction filter to produce a continuous time output signal <m:math overflow="scroll"><m:mi>y</m:mi></m:math>, thus effectively implementing some continuous time system <m:math overflow="scroll"><m:msub><m:mi>H</m:mi><m:mn>1</m:mn></m:msub></m:math>. This process is illustrated in <link target-id="uid2"/>, and the spectra are shown for a specific case in <link target-id="uid3"/>.</para>
        <figure id="uid2"><media id="uid2_media" alt="">
            <image mime-type="image/png" src="../../media/block.png" id="uid2_onlineimage" width="400"><!-- NOTE: attribute width changes image size online (pixels). original width is 1026. --></image>
            <image mime-type="application/postscript" for="pdf" src="../../media/block.eps" id="uid2_printimage" print-width="3in">
              <!--NOTE: attribute width changes image size in printed PDF (if specified in .tex file)-->
            </image>
          </media>
          
        <caption>A block diagram for processing of continuous time signals using discrete time systems is shown.</caption></figure>
        <para id="id62683">Further discussion about each of these steps is necessary, and we will begin by discussing the analog to digital converter, often denoted by ADC or A/D. It is clear that in order to process a continuous time signal using discrete time techniques, we must sample the signal as an initial step. This is essentially the purpose of the ADC, although there are practical issues that which will be discussed later. An ADC takes a continuous time analog signal as input and produces a discrete time digital signal as output, with the ideal infinite precision case corresponding to sampling. As stated by the Nyquist-Shannon Sampling theorem, in order to retain all information about the original signal, we usually wish sample above the Nyquist frequency <m:math overflow="scroll"><m:mrow><m:msub><m:mi>ω</m:mi><m:mi>s</m:mi></m:msub><m:mo>≥</m:mo><m:mn>2</m:mn><m:mi>B</m:mi></m:mrow></m:math> where the original signal is bandlimited to <m:math overflow="scroll"><m:mrow><m:mo>(</m:mo><m:mo>-</m:mo><m:mi>B</m:mi><m:mo>,</m:mo><m:mi>B</m:mi><m:mo>)</m:mo></m:mrow></m:math>. When it is not possible to guarantee this condition, an anti-aliasing filter should be used.</para>
        <para id="id62110">The discrete time filter is where the intentional modifications to the signal information occur. This is commonly done in digital computer software after the signal has been sampled by a hardware ADC and before it is used by a hardware DAC to construct the output. This allows the above setup to be quite flexible in the filter that it implements. If sampling above the Nyquist frequency the. Any modifications that the discrete filter makes to this shape can be passed on to a continuous time signal assuming perfect reconstruction. Consequently, the process described will implement a continuous time, linear time invariant filter. This will be explained in more mathematical detail in the subsequent section. As usual, there are, of course, practical limitations that will be discussed later.</para>
        <para id="id62120">Finally, we will discuss the digital to analog converter, often denoted by DAC or D/A. Since continuous time filters have continuous time inputs and continuous time outputs, we must construct a continuous time signal from our filtered discrete time signal. Assuming that we have sampled a bandlimited at a sufficiently high rate, in the ideal case this would be done using perfect reconstruction through the Whittaker-Shannon interpolation formula. However, there are, once again, practical issues that prevent this from happening that will be discussed later.</para>
        <figure id="uid3"><media id="uid3_media" alt="">
            <image mime-type="image/png" src="../../media/dtpcts.png" id="uid3_onlineimage" width="600"><!-- NOTE: attribute width changes image size online (pixels). original width is 1125. --></image>
            <image mime-type="application/postscript" for="pdf" src="../../media/dtpcts.eps" id="uid3_printimage" print-width="4.5in">
              <!--NOTE: attribute width changes image size in printed PDF (if specified in .tex file)-->
            </image>
          </media>
          
        <caption>Spectra are shown in black for each step in implementing a continuous time filter using a discrete time filter for a specific signal. The filter frequency responses are shown in blue, and both are meant to have maximum value 1 in spite of the vertical scale that is meant only for the signal spectra. Ideal ADCs and DACs are assumed.</caption></figure>
      </section>
      <section id="uid4">
        <title>Discrete Time Filter</title>
        <para id="id62963">With some initial discussion of the process illustrated in <link target-id="uid2"/> complete, the relationship between the continuous time, linear time invariant filter <m:math overflow="scroll"><m:msub><m:mi>H</m:mi><m:mn>1</m:mn></m:msub></m:math> and the discrete time, linear time invariant filter <m:math overflow="scroll"><m:msub><m:mi>H</m:mi><m:mn>2</m:mn></m:msub></m:math> can be explored. We will assume the use of ideal, infinite precision ADCs and DACs that perform sampling and perfect reconstruction, respectively, using a sampling rate <m:math overflow="scroll"><m:mrow><m:msub><m:mi>ω</m:mi><m:mi>s</m:mi></m:msub><m:mo>=</m:mo><m:mn>2</m:mn><m:mi>π</m:mi><m:mo>/</m:mo><m:msub><m:mi>T</m:mi><m:mi>s</m:mi></m:msub><m:mo>≥</m:mo><m:mn>2</m:mn><m:mi>B</m:mi></m:mrow></m:math> where the input signal <m:math overflow="scroll"><m:mi>x</m:mi></m:math> is bandlimited to <m:math overflow="scroll"><m:mrow><m:mo>(</m:mo><m:mo>-</m:mo><m:mi>B</m:mi><m:mo>,</m:mo><m:mi>B</m:mi><m:mo>)</m:mo></m:mrow></m:math>. Note that these arguments fail if this condition is not met and aliasing occurs. In that case, preapplication of an anti-aliasing filter is necessary for these arguments to hold.</para>
        <para id="id63066">Recall that we have already calculated the spectrum <m:math overflow="scroll"><m:msub><m:mi>X</m:mi><m:mi>s</m:mi></m:msub></m:math> of the samples <m:math overflow="scroll"><m:msub><m:mi>x</m:mi><m:mi>s</m:mi></m:msub></m:math> given an input <m:math overflow="scroll"><m:mi>x</m:mi></m:math> with spectrum <m:math overflow="scroll"><m:mi>X</m:mi></m:math> as</para>
        <equation id="id63112">
          <m:math overflow="scroll" mode="display">
            <m:mrow>
              <m:msub>
                <m:mi>X</m:mi>
                <m:mi>s</m:mi>
              </m:msub>
              <m:mrow>
                <m:mo>(</m:mo>
                <m:mi>ω</m:mi>
                <m:mo>)</m:mo>
              </m:mrow>
              <m:mo>=</m:mo>
              <m:mfrac>
                <m:mn>1</m:mn>
                <m:msub>
                  <m:mi>T</m:mi>
                  <m:mi>s</m:mi>
                </m:msub>
              </m:mfrac>
              <m:munderover>
                <m:mo>∑</m:mo>
                <m:mrow>
                  <m:mi>k</m:mi>
                  <m:mo>=</m:mo>
                  <m:mo>-</m:mo>
                  <m:mi>∞</m:mi>
                </m:mrow>
                <m:mi>∞</m:mi>
              </m:munderover>
              <m:mi>X</m:mi>
              <m:mfenced separators="" open="(" close=")">
                <m:mfrac>
                  <m:mrow>
                    <m:mi>ω</m:mi>
                    <m:mo>-</m:mo>
                    <m:mn>2</m:mn>
                    <m:mi>π</m:mi>
                    <m:mi>k</m:mi>
                  </m:mrow>
                  <m:msub>
                    <m:mi>T</m:mi>
                    <m:mi>s</m:mi>
                  </m:msub>
                </m:mfrac>
              </m:mfenced>
              <m:mo>.</m:mo>
            </m:mrow>
          </m:math>
        </equation>
        <para id="id63202">Likewise, the spectrum <m:math overflow="scroll"><m:msub><m:mi>Y</m:mi><m:mi>s</m:mi></m:msub></m:math> of the samples <m:math overflow="scroll"><m:msub><m:mi>y</m:mi><m:mi>s</m:mi></m:msub></m:math> given an output <m:math overflow="scroll"><m:mi>y</m:mi></m:math> with spectrum <m:math overflow="scroll"><m:mi>Y</m:mi></m:math> is</para>
        <equation id="id63249">
          <m:math overflow="scroll" mode="display">
            <m:mrow>
              <m:msub>
                <m:mi>Y</m:mi>
                <m:mi>s</m:mi>
              </m:msub>
              <m:mrow>
                <m:mo>(</m:mo>
                <m:mi>ω</m:mi>
                <m:mo>)</m:mo>
              </m:mrow>
              <m:mo>=</m:mo>
              <m:mfrac>
                <m:mn>1</m:mn>
                <m:msub>
                  <m:mi>T</m:mi>
                  <m:mi>s</m:mi>
                </m:msub>
              </m:mfrac>
              <m:munderover>
                <m:mo>∑</m:mo>
                <m:mrow>
                  <m:mi>k</m:mi>
                  <m:mo>=</m:mo>
                  <m:mo>-</m:mo>
                  <m:mi>∞</m:mi>
                </m:mrow>
                <m:mi>∞</m:mi>
              </m:munderover>
              <m:mi>Y</m:mi>
              <m:mfenced separators="" open="(" close=")">
                <m:mfrac>
                  <m:mrow>
                    <m:mi>ω</m:mi>
                    <m:mo>-</m:mo>
                    <m:mn>2</m:mn>
                    <m:mi>π</m:mi>
                    <m:mi>k</m:mi>
                  </m:mrow>
                  <m:msub>
                    <m:mi>T</m:mi>
                    <m:mi>s</m:mi>
                  </m:msub>
                </m:mfrac>
              </m:mfenced>
              <m:mo>.</m:mo>
            </m:mrow>
          </m:math>
        </equation>
        <para id="id63337">From the knowledge that <m:math overflow="scroll"><m:mrow><m:msub><m:mi>y</m:mi><m:mi>s</m:mi></m:msub><m:mo>=</m:mo><m:msub><m:mrow><m:mo>(</m:mo><m:msub><m:mi>H</m:mi><m:mn>1</m:mn></m:msub><m:mi>x</m:mi><m:mo>)</m:mo></m:mrow><m:mi>s</m:mi></m:msub><m:mo>=</m:mo><m:msub><m:mi>H</m:mi><m:mn>2</m:mn></m:msub><m:mrow><m:mo>(</m:mo><m:msub><m:mi>x</m:mi><m:mi>s</m:mi></m:msub><m:mo>)</m:mo></m:mrow></m:mrow></m:math>, it follows that</para>
        <equation id="id63403">
          <m:math overflow="scroll" mode="display">
            <m:mrow>
              <m:munderover>
                <m:mo>∑</m:mo>
                <m:mrow>
                  <m:mi>k</m:mi>
                  <m:mo>=</m:mo>
                  <m:mo>-</m:mo>
                  <m:mi>∞</m:mi>
                </m:mrow>
                <m:mi>∞</m:mi>
              </m:munderover>
              <m:msub>
                <m:mi>H</m:mi>
                <m:mn>1</m:mn>
              </m:msub>
              <m:mfenced separators="" open="(" close=")">
                <m:mfrac>
                  <m:mrow>
                    <m:mi>ω</m:mi>
                    <m:mo>-</m:mo>
                    <m:mn>2</m:mn>
                    <m:mi>π</m:mi>
                    <m:mi>k</m:mi>
                  </m:mrow>
                  <m:msub>
                    <m:mi>T</m:mi>
                    <m:mi>s</m:mi>
                  </m:msub>
                </m:mfrac>
              </m:mfenced>
              <m:mi>X</m:mi>
              <m:mfenced separators="" open="(" close=")">
                <m:mfrac>
                  <m:mrow>
                    <m:mi>ω</m:mi>
                    <m:mo>-</m:mo>
                    <m:mn>2</m:mn>
                    <m:mi>π</m:mi>
                    <m:mi>k</m:mi>
                  </m:mrow>
                  <m:msub>
                    <m:mi>T</m:mi>
                    <m:mi>s</m:mi>
                  </m:msub>
                </m:mfrac>
              </m:mfenced>
              <m:mo>=</m:mo>
              <m:msub>
                <m:mi>H</m:mi>
                <m:mn>2</m:mn>
              </m:msub>
              <m:mrow>
                <m:mo>(</m:mo>
                <m:mi>ω</m:mi>
                <m:mo>)</m:mo>
              </m:mrow>
              <m:munderover>
                <m:mo>∑</m:mo>
                <m:mrow>
                  <m:mi>k</m:mi>
                  <m:mo>=</m:mo>
                  <m:mo>-</m:mo>
                  <m:mi>∞</m:mi>
                </m:mrow>
                <m:mi>∞</m:mi>
              </m:munderover>
              <m:mi>X</m:mi>
              <m:mfenced separators="" open="(" close=")">
                <m:mfrac>
                  <m:mrow>
                    <m:mi>ω</m:mi>
                    <m:mo>-</m:mo>
                    <m:mn>2</m:mn>
                    <m:mi>π</m:mi>
                    <m:mi>k</m:mi>
                  </m:mrow>
                  <m:msub>
                    <m:mi>T</m:mi>
                    <m:mi>s</m:mi>
                  </m:msub>
                </m:mfrac>
              </m:mfenced>
              <m:mo>.</m:mo>
            </m:mrow>
          </m:math>
        </equation>
        <para id="id63564">Because <m:math overflow="scroll"><m:mi>X</m:mi></m:math> is bandlimited to <m:math overflow="scroll"><m:mrow><m:mo>(</m:mo><m:mo>-</m:mo><m:mi>π</m:mi><m:mo>/</m:mo><m:msub><m:mi>T</m:mi><m:mi>s</m:mi></m:msub><m:mo>,</m:mo><m:mi>π</m:mi><m:mo>/</m:mo><m:msub><m:mi>T</m:mi><m:mi>s</m:mi></m:msub><m:mo>)</m:mo></m:mrow></m:math>, we may conclude that</para>
        <equation id="id63616">
          <m:math overflow="scroll" mode="display">
            <m:mrow>
              <m:msub>
                <m:mi>H</m:mi>
                <m:mn>2</m:mn>
              </m:msub>
              <m:mrow>
                <m:mo>(</m:mo>
                <m:mi>ω</m:mi>
                <m:mo>)</m:mo>
              </m:mrow>
              <m:mo>=</m:mo>
              <m:munderover>
                <m:mo>∑</m:mo>
                <m:mrow>
                  <m:mi>k</m:mi>
                  <m:mo>=</m:mo>
                  <m:mo>-</m:mo>
                  <m:mi>∞</m:mi>
                </m:mrow>
                <m:mi>∞</m:mi>
              </m:munderover>
              <m:msub>
                <m:mi>H</m:mi>
                <m:mn>1</m:mn>
              </m:msub>
              <m:mfenced separators="" open="(" close=")">
                <m:mfrac>
                  <m:mrow>
                    <m:mi>ω</m:mi>
                    <m:mo>-</m:mo>
                    <m:mn>2</m:mn>
                    <m:mi>π</m:mi>
                    <m:mi>k</m:mi>
                  </m:mrow>
                  <m:msub>
                    <m:mi>T</m:mi>
                    <m:mi>s</m:mi>
                  </m:msub>
                </m:mfrac>
              </m:mfenced>
              <m:mfenced separators="" open="(" close=")">
                <m:mi>u</m:mi>
                <m:mfenced separators="" open="(" close=")">
                  <m:mi>ω</m:mi>
                  <m:mo>-</m:mo>
                  <m:mo>(</m:mo>
                  <m:mn>2</m:mn>
                  <m:mi>k</m:mi>
                  <m:mo>-</m:mo>
                  <m:mn>1</m:mn>
                  <m:mo>)</m:mo>
                  <m:mi>π</m:mi>
                </m:mfenced>
                <m:mo>-</m:mo>
                <m:mi>u</m:mi>
                <m:mfenced separators="" open="(" close=")">
                  <m:mi>ω</m:mi>
                  <m:mo>-</m:mo>
                  <m:mo>(</m:mo>
                  <m:mn>2</m:mn>
                  <m:mi>k</m:mi>
                  <m:mo>+</m:mo>
                  <m:mn>1</m:mn>
                  <m:mo>)</m:mo>
                  <m:mi>π</m:mi>
                </m:mfenced>
              </m:mfenced>
              <m:mo>.</m:mo>
            </m:mrow>
          </m:math>
        </equation>
        <para id="id63764">More simply stated, <m:math overflow="scroll"><m:msub><m:mi>H</m:mi><m:mn>2</m:mn></m:msub></m:math> is <m:math overflow="scroll"><m:mrow><m:mn>2</m:mn><m:mi>π</m:mi></m:mrow></m:math> periodic and <m:math overflow="scroll"><m:mrow><m:msub><m:mi>H</m:mi><m:mn>2</m:mn></m:msub><m:mrow><m:mo>(</m:mo><m:mi>ω</m:mi><m:mo>)</m:mo></m:mrow><m:mo>=</m:mo><m:msub><m:mi>H</m:mi><m:mn>1</m:mn></m:msub><m:mrow><m:mo>(</m:mo><m:mi>ω</m:mi><m:mo>/</m:mo><m:msub><m:mi>T</m:mi><m:mi>s</m:mi></m:msub><m:mo>)</m:mo></m:mrow></m:mrow></m:math> for <m:math overflow="scroll"><m:mrow><m:mi>ω</m:mi><m:mo>∈</m:mo><m:mo>[</m:mo><m:mo>-</m:mo><m:mi>π</m:mi><m:mo>,</m:mo><m:mi>π</m:mi><m:mo>)</m:mo></m:mrow></m:math>.</para>
        <para id="id63866">Given a specific continuous time, linear time invariant filter <m:math overflow="scroll"><m:msub><m:mi>H</m:mi><m:mn>1</m:mn></m:msub></m:math>, the above equation solves the system design problem provided we know how to implement <m:math overflow="scroll"><m:msub><m:mi>H</m:mi><m:mn>2</m:mn></m:msub></m:math>. The filter <m:math overflow="scroll"><m:msub><m:mi>H</m:mi><m:mn>2</m:mn></m:msub></m:math> must be chosen such that it has a frequency response where each period has the same shape as the frequency response of <m:math overflow="scroll"><m:msub><m:mi>H</m:mi><m:mn>1</m:mn></m:msub></m:math> on <m:math overflow="scroll"><m:mrow><m:mo>(</m:mo><m:mo>-</m:mo><m:mi>π</m:mi><m:mo>/</m:mo><m:msub><m:mi>T</m:mi><m:mi>s</m:mi></m:msub><m:mo>,</m:mo><m:mi>π</m:mi><m:mo>/</m:mo><m:msub><m:mi>T</m:mi><m:mi>s</m:mi></m:msub><m:mo>)</m:mo></m:mrow></m:math>. This is illustrated in the frequency responses shown in <link target-id="uid3"/>.</para>
        <para id="id63968">We might also want to consider the system analysis problem in which a specific discrete time, linear time invariant filter <m:math overflow="scroll"><m:msub><m:mi>H</m:mi><m:mn>2</m:mn></m:msub></m:math> is given, and we wish to describe the filter <m:math overflow="scroll"><m:msub><m:mi>H</m:mi><m:mn>1</m:mn></m:msub></m:math>. There are many such filters, but we can describe their frequency responses on <m:math overflow="scroll"><m:mrow><m:mo>(</m:mo><m:mo>-</m:mo><m:mi>π</m:mi><m:mo>/</m:mo><m:msub><m:mi>T</m:mi><m:mi>s</m:mi></m:msub><m:mo>,</m:mo><m:mi>π</m:mi><m:mo>/</m:mo><m:msub><m:mi>T</m:mi><m:mi>s</m:mi></m:msub><m:mo>)</m:mo></m:mrow></m:math> using the above equation. Isolating one period of <m:math overflow="scroll"><m:mrow><m:msub><m:mi>H</m:mi><m:mn>2</m:mn></m:msub><m:mrow><m:mo>(</m:mo><m:mi>ω</m:mi><m:mo>)</m:mo></m:mrow></m:mrow></m:math> yields
the conclusion that <m:math overflow="scroll"><m:mrow><m:msub><m:mi>H</m:mi><m:mn>1</m:mn></m:msub><m:mrow><m:mo>(</m:mo><m:mi>ω</m:mi><m:mo>)</m:mo></m:mrow><m:mo>=</m:mo><m:msub><m:mi>H</m:mi><m:mn>2</m:mn></m:msub><m:mrow><m:mo>(</m:mo><m:mi>ω</m:mi><m:msub><m:mi>T</m:mi><m:mi>s</m:mi></m:msub><m:mo>)</m:mo></m:mrow></m:mrow></m:math> for <m:math overflow="scroll"><m:mrow><m:mi>ω</m:mi><m:mo>∈</m:mo><m:mo>(</m:mo><m:mo>-</m:mo><m:mi>π</m:mi><m:mo>/</m:mo><m:msub><m:mi>T</m:mi><m:mi>s</m:mi></m:msub><m:mo>,</m:mo><m:mi>π</m:mi><m:mo>/</m:mo><m:msub><m:mi>T</m:mi><m:mi>s</m:mi></m:msub><m:mo>)</m:mo></m:mrow></m:math>. Because <m:math overflow="scroll"><m:mi>x</m:mi></m:math> was assumed to be bandlimited to <m:math overflow="scroll"><m:mrow><m:mo>(</m:mo><m:mo>-</m:mo><m:mi>π</m:mi><m:mo>/</m:mo><m:mi>T</m:mi><m:mo>,</m:mo><m:mi>π</m:mi><m:mo>/</m:mo><m:mi>T</m:mi><m:mo>)</m:mo></m:mrow></m:math>, the value of the frequency response elsewhere is irrelevant.</para>
      </section>
    </section>
    <section id="cid3" class="ap">
      <title>Practical Considerations</title>
      <para id="id64197">As mentioned before, there are several practical considerations that need to be addressed at each stage of the process shown in <link target-id="uid2"/>. Some of these will be briefly addressed here, and a more complete model of how discrete time processing of continuous time signals appears in <link target-id="uid5"/>.</para>
      <figure id="uid5"><media id="uid5_media" alt="">
          <image mime-type="image/png" src="../../media/block2.png" id="uid5_onlineimage" width="800"><!-- NOTE: attribute width changes image size online (pixels). original width is 2249. --></image>
          <image mime-type="application/postscript" for="pdf" src="../../media/block2.eps" id="uid5_printimage" print-width="4.5in">
            <!--NOTE: attribute width changes image size in printed PDF (if specified in .tex file)-->
          </image>
        </media>
        
      <caption>A more complete model of how discrete time processing of continuous time signals is implemented in practice. Notice the addition of anti-aliasing and anti-imaging filters to promote input and output bandlimitedness. The ADC is shown to perform sampling with quantization. The digital filter is further specified to be causal. The DAC is shown to perform imperfect reconstruction, a zero order hold in this case.</caption></figure>
      <section id="uid6">
        <title>Anti-Aliasing Filter</title>
        <para id="id64236">In reality, we cannot typically guarantee that the input signal will have a specific bandlimit, and sufficiently high sampling rates cannot necessarily be produced. Since it is imperative that the higher frequency components not be allowed to masquerade as lower frequency components through aliasing, anti-aliasing filters with cutoff frequency less than or equal to <m:math overflow="scroll"><m:mrow><m:msub><m:mi>ω</m:mi><m:mi>s</m:mi></m:msub><m:mo>/</m:mo><m:mn>2</m:mn></m:mrow></m:math> must be used before the signal is fed into the ADC. The block diagram in <link target-id="uid5"/> reflects this addition.</para>
        <para id="id64266">As described in the previous section, an ideal lowpass filter removing all energy at frequencies above <m:math overflow="scroll"><m:mrow><m:msub><m:mi>ω</m:mi><m:mi>s</m:mi></m:msub><m:mo>/</m:mo><m:mn>2</m:mn></m:mrow></m:math> would be optimal. Of course, this is not achievable, so approximations of the ideal lowpass filter with low gain above <m:math overflow="scroll"><m:mrow><m:msub><m:mi>ω</m:mi><m:mi>s</m:mi></m:msub><m:mo>/</m:mo><m:mn>2</m:mn></m:mrow></m:math> must be accepted. This means that some aliasing is inevitable, but it can be reduced to a mostly insignificant level.</para>
      </section>
      <section id="uid7">
        <title>Signal Quantization</title>
        <para id="id64318">In our preceding discussion of discrete time processing of continuous time signals, we had assumed an ideal case in which the ADC performs sampling exactly. However, while an ADC does convert a continuous time signal to a discrete time signal, it also must convert analog values to digital values for use in a digital logic device, a phenomenon called quantization. The ADC subsystem of the block diagram in <link target-id="uid5"/> reflects this addition.</para>
        <para id="id62478">The data obtained by the ADC must be stored in finitely many bits inside a digital logic device. Thus, there are only finitely many values that a digital sample can take, specifically <m:math overflow="scroll"><m:msup><m:mn>2</m:mn><m:mi>N</m:mi></m:msup></m:math> where <m:math overflow="scroll"><m:mi>N</m:mi></m:math> is the number of bits, while there are uncountably many values an analog sample can take. Hence something must be lost in the quantization process. The result is that quantization limits both the range and precision of the output of the ADC. Both are finite, and improving one at constant number of bits requires sacrificing quality in the other.</para>
      </section>
      <section id="uid8">
        <title>Filter Implementability</title>
        <para id="id62519">In real world circumstances, if the input signal is a function of time, the future values of the signal cannot be used to calculate the output. Thus, the digital filter <m:math overflow="scroll"><m:msub><m:mi>H</m:mi><m:mn>2</m:mn></m:msub></m:math> and the overall system <m:math overflow="scroll"><m:msub><m:mi>H</m:mi><m:mn>1</m:mn></m:msub></m:math> must be causal. The filter annotation in <link target-id="uid5"/> reflects this addition. If the desired system is not causal but has impulse response equal to zero before some time <m:math overflow="scroll"><m:msub><m:mi>t</m:mi><m:mn>0</m:mn></m:msub></m:math>, a delay can be introduced to make it causal. However, if this delay is excessive or the impulse response has infinite length, a windowing scheme becomes necessary in order to practically solve the problem. Multiplying by a window to decrease the length of the impulse response can reduce the necessary delay and decrease computational requirements.</para>
        <para id="id64493">Take, for instance the case of the ideal lowpass filter. It is acausal and infinite in length in both directions. Thus, we must satisfy ourselves with an approximation. One might suggest that these approximations could be achieved by truncating the sinc impulse response of the lowpass filter at one of its zeros, effectively windowing it with a rectangular pulse. However, doing so would produce poor results in the frequency domain as the resulting convolution would significantly spread the signal energy. Other windowing functions, of which there are many, spread the signal less in the frequency domain and are thus much more useful for producing these approximations.</para>
      </section>
      <section id="uid9">
        <title>Anti-Imaging Filter</title>
        <para id="id64511">In our preceding discussion of discrete time processing of continuous time signals, we had assumed an ideal case in which the DAC performs perfect reconstruction. However, when considering practical matters, it is important to remember that the sinc function, which is used for Whittaker-Shannon interpolation, is infinite in length and acausal. Hence, it would be impossible for an DAC to implement perfect reconstruction.</para>
        <para id="id64518">Instead, the DAC implements a causal zero order hold or other simple reconstruction scheme with respect to the sampling rate <m:math overflow="scroll"><m:msub><m:mi>ω</m:mi><m:mi>s</m:mi></m:msub></m:math> used by the ADC. However, doing so will result in a function that is not bandlimited to <m:math overflow="scroll"><m:mrow><m:mo>(</m:mo><m:mo>-</m:mo><m:msub><m:mi>ω</m:mi><m:mi>s</m:mi></m:msub><m:mo>/</m:mo><m:mn>2</m:mn><m:mo>,</m:mo><m:msub><m:mi>ω</m:mi><m:mi>s</m:mi></m:msub><m:mo>/</m:mo><m:mn>2</m:mn><m:mo>)</m:mo></m:mrow></m:math>. Therefore, an additional lowpass filter, called an anti-imaging filter, must be applied to the output. The process illustrated in <link target-id="uid5"/> reflects these additions. The anti-imaging filter attempts to bandlimit the signal to <m:math overflow="scroll"><m:mrow><m:mo>(</m:mo><m:mo>-</m:mo><m:msub><m:mi>ω</m:mi><m:mi>s</m:mi></m:msub><m:mo>/</m:mo><m:mn>2</m:mn><m:mo>,</m:mo><m:msub><m:mi>ω</m:mi><m:mi>s</m:mi></m:msub><m:mo>/</m:mo><m:mn>2</m:mn><m:mo>)</m:mo></m:mrow></m:math>, so an ideal lowpass filter would be optimal. However, as has already been stated, this is not possible. Therefore, approximations of the ideal lowpass filter with low gain above <m:math overflow="scroll"><m:mrow><m:msub><m:mi>ω</m:mi><m:mi>s</m:mi></m:msub><m:mo>/</m:mo><m:mn>2</m:mn></m:mrow></m:math> must be accepted. The anti-imaging filter typically has the same characteristics as the anti-aliasing filter.</para>
      </section>
    </section>
    <section id="cid4" class="cn">
      <title>Discrete Time Processing of Continuous Time Signals Summary</title>
      <para id="id64652">As has been show, the sampling and reconstruction can be used to implement continuous time systems using discrete time systems, which is very powerful due to the versatility, flexibility, and speed of digital computers. However, there are a large number of practical considerations that must be taken into account when attempting to accomplish this, including quantization noise and anti-aliasing in the analog to digital converter, filter implementability in the discrete time filter, and reconstruction windowing and associated issues in the digital to analog converter. Many modern technologies address these issues and make use of this process.</para>
    </section>
  </content>
</document>